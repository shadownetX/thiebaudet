# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name thiebaudet.vonp www.thiebaudet.vonp;

    return 301 https://www.thiebaudet.vonp$request_uri;
}

# Redirect non-www-HTTPS to www-HTTPS
server {
    listen 443 ssl;
    server_name thiebaudet.vonp;

    ssl_certificate /etc/nginx/ssl/thiebaudet.crt;
    ssl_certificate_key /etc/nginx/ssl/thiebaudet.key;

    return 301 https://www.thiebaudet.vonp$request_uri;
}

server {
    listen 443 ssl http2 default_server;
    server_name www.thiebaudet.vonp;
    root /var/www/thiebaudet/public;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php-upstream;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param HTTPS on;
    }

    location ~ \.php$ {
        return 404;
    }

    ssl_certificate /etc/nginx/ssl/thiebaudet.crt;
    ssl_certificate_key /etc/nginx/ssl/thiebaudet.key;

    # Enable HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;

    # Optimize session cache
    ssl_session_cache   shared:SSL:40m;
    ssl_session_timeout 4h;

    # Enable session tickets
    ssl_session_tickets on;

    # Use only TLS
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Tell client which ciphers are available
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}